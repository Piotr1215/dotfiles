# Define the abbreviation
typeset -A abbrevs
abbrevs=(
    "spo" '__sponge_expand'
    "bak" '__backup_expand'
    "ind" '__into_new_dir'
)

__into_new_dir() {
    local cmd="$LBUFFER"
    local words=("${(z)cmd}")
    local last_arg="${words[-1]}"
    # Get everything before the directory name and 'ind'
    cmd=${cmd%% $last_arg ind}
    # Remove any trailing spaces
    cmd=${cmd%%[[:space:]]}
    LBUFFER="mkdir -p $last_arg && $cmd"
}

# Function to expand the sponge command
__sponge_expand() {
    local cmd="$LBUFFER"
    local words=("${(z)cmd}")  # Split command into words
    local last_arg="${words[-1]}"
    LBUFFER="$cmd | sponge $last_arg"
}

# Fixed version
__backup_expand() {
    local cmd="$LBUFFER"
    # Remove 'bak' from the end of the command
    cmd=${cmd%% bak}
    local words=("${(z)cmd}")
    local last_arg="${words[-1]}"
    LBUFFER="cp -a $last_arg{,.bak-$(date +%Y%m%d-%H%M)}"
}

my-expand-abbrev() {
    local MATCH
    LBUFFER=${LBUFFER%%(#m)[_a-zA-Z0-9]#}
    if [[ -n "${abbrevs[$MATCH]}" ]]; then
        ${abbrevs[$MATCH]}
    else
        LBUFFER+=$MATCH
    fi
    zle self-insert
}

# Create the wdget and bind it
zle -N my-expand-abbrev
bindkey " " my-expand-abbrev
bindkey -M isearch " " self-insert
