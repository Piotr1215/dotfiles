tmux_conf_new_pane_retain_current_path=false
tmux_conf_new_window_retain_current_path=true

# Keep the default prefix
set-option -g prefix C-b

# Statusline options
set-option -g status-position bottom 
set -g status-left-length 10
set -g status-justify absolute-centre
set -g status-style bg=default

# Events and activity
set -g focus-events on
set -g monitor-activity on
set -g visual-activity off

# Windows and panes
set -g base-index 1
set -g pane-base-index 1
# bind-key -r i run-shell "tmux neww ./tmux-cht.sh"
bind-key / copy-mode \; send-key ?
bind-key -n F2 new-window
bind-key -n F5 split-window -v
bind-key -n F6 split-window -h
bind-key -n F8 command-prompt -I "#W" "rename-window '%%'"
bind-key -n F7 command-prompt "find-window '%%'"
bind-key -n F10 setw synchronize-panes
bind-key -n F11 resize-pane -Z
bind-key -n F12 kill-pane
bind-key -n C-PageDown next-window
bind-key -n C-PageUp previous-window
bind-key -n S-Left resize-pane -L
bind-key -n S-Right resize-pane -R
bind-key -n S-Up resize-pane -U
bind-key -n S-Down resize-pane -D
bind-key -n M-PageUp switch-client -p
bind-key -n M-PageDown switch-client -n
# Detatch and attach tmux pane
bind-key ! break-pane -d -n _hidden_pane
bind-key @ join-pane -s $.1
# pane movement
# Select pane to join to active window as a (S)plit 
bind-key S choose-window 'join-pane -v -s "%%"'
# Select pane to join to active window as a (V)ertical split 
bind-key V choose-window 'join-pane -h -s "%%"'

# Open new windows in tmux
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'
set -g xterm-keys on

# Key bindings
setw -g mode-keys vi

# Move with Alt+vi or Alt+arrows
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# Unbind F11 to allow for zoom
unbind F11
unbind C-i

# Useful popups
# bind -n M-t popup -E -h 95% -w 95% -x 100% "htop"
bind -n M-r popup -d '#{pane_current_path}' -E -h 95% -w 95% -x 100% "ranger"
bind -n M-z popup -d '#{pane_current_path}' -E -h 95% -w 95% -x 100% "zsh"
bind -n M-g popup -d '#{pane_current_path}' -E -h 95% -w 95% -x 100% "lazygit"
bind -n M-s display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind -n M-e display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmuxinator stop"
bind -n M-t display-popup -E "tmuxinator start $(tmuxinator list -n | tail -n +2 | fzf --reverse)"

set -g status-interval 60 
set-option -g default-command "/usr/bin/zsh"

# spot the panes delineation lines easier
set -g pane-border-style fg=colour237
set -g pane-active-border-style fg=colour242
set-window-option -g window-status-current-style fg=colour166,bright
set -g pane-border-lines heavy

# Display panes a bit longer to press the keys
set -g display-panes-time 100000 #100s

bind r source-file ~/.tmux.conf \; display "Tmux Reloaded"

# set -g status-style fg=colour231,bg=colour234

# Plugins
set -g @plugin 'dracula/tmux'
set -g @dracula-plugins "cpu-usage gpu-usage ram-usage time"
set -g @dracula-show-left-icon session
set -g @dracula-show-powerline true
set -g @dracula-military-time true
# set -g @plugin 'kiyoon/tmux-side-nvim-tree'

#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'christoomey/vim-tmux-navigator'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
