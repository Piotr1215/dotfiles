#!/usr/bin/env python3
#
# snd - Send messages to all Claude tmux panes
#
# This script broadcasts text messages to all tmux panes that are running
# the __claude_with_monitor.sh script. It's used for quick communication
# with multiple Claude instances during collaborative sessions.
#
# Usage:
#   snd                     # Sends default message
#   snd "your message"      # Sends custom message to all Claude panes
#
# The script:
# 1. Finds all tmux panes running __claude_with_monitor.sh
# 2. Sends the provided text (or default) to each pane
# 3. Automatically presses Enter in each pane to submit the message
#
# Exit codes:
#   0 - Success
#   1 - No Claude panes found

import sys
import subprocess

# Get text to send
text = ' '.join(sys.argv[1:]) if len(sys.argv) > 1 else "read my broadcast and keep collaborating"

# Find panes running __claude_with_monitor.sh
claude_panes = []
panes = subprocess.run(['tmux', 'list-panes', '-a', '-F', '#{session_name}:#{window_index}.#{pane_index} #{pane_pid}'], 
                      capture_output=True, text=True).stdout.strip().splitlines()

for line in panes:
    if ' ' in line:
        pane_id, pid = line.split(' ', 1)
        ps = subprocess.run(['ps', '--no-headers', '-o', 'args', '--ppid', pid], 
                           capture_output=True, text=True)
        if '__claude_with_monitor.sh' in ps.stdout:
            claude_panes.append(pane_id)

if not claude_panes:
    print("No Claude panes found!")
    sys.exit(1)

print(f"Sending to {len(claude_panes)} Claude panes...")

# Send to each pane
for pane in claude_panes:
    subprocess.run(['tmux', 'send-keys', '-t', pane, text])
    subprocess.run(['tmux', 'send-keys', '-t', pane, 'C-m'])
    print(f"âœ“ {pane}")
