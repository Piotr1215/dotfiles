#!/usr/bin/zsh

prompt_instructions="# Instructions Keep your responses short and simple. When asked to provide a command: - Provide only one command at a time - For command line tools, show --help for usage - Use heredocs for file creation - Use sed for file manipulation - No explanations unless explicitly requested - For system/environment queries, provide one-liner command and wait for execution - Save files to /home/decoder/dev path - Enclose code in triple backticks with scope (bash, python, etc) - For internet searches, run /home/decoder/dev/dotfiles/scripts/__search_internet.py Search freely when you need more info or want to confirm current state User request below:"

# Function to execute command and open gpt
function execute_and_gpt() {
    # Get the current command from the buffer
    local cmd="$BUFFER"

    local current_path=$(pwd)

    # Clear the buffer
    BUFFER=""

    # Execute the command and capture its output
    local output=$(eval "$cmd" 2>&1 | sed -r "s/\x1b\[[0-9;]*[mGKHl]//g")

    # Use a temporary file for the processed content
    local tmpfile=$(mktemp /tmp/nvim_buffer_cleaned.XXXXXX)
    
    # Save the command and output to the temporary file
    echo "Command: $cmd" > $tmpfile
    echo "Output:" >> $tmpfile
    if [ -z "$output" ]; then
        echo "No output received from the command." >> $tmpfile
    else
        echo "$output" >> $tmpfile
    fi

    # Open Neovim with the content
   nvim -c "GpChatNew" \
        -c "call append(line('$'), readfile('$tmpfile'))" \
        -c "lcd $current_path" \
        -c "normal i$prompt_instructions" \
        -c "normal o" \
        -c "call timer_start(100, {-> feedkeys('A', 'n')})"


    # Remove the temporary file after usage
    rm $tmpfile

    # Redraw the prompt
    zle reset-prompt
}

# Create a widget for the execute_and_gpt function
zle -N execute_and_gpt

# Bind the widget to Alt+g (you can change this to any key combination you prefer)
bindkey '^[^G' execute_and_gpt


function gpt() {
    local current_path=$(pwd)
    nvim -c "GpChatNew" \
         -c "lcd $current_path" \
         -c "normal i$prompt_instructions" \
         -c "normal 2o" \
         -c "call timer_start(100, {-> feedkeys('A', 'n')})"
}
